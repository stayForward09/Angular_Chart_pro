{"version":3,"sources":["angular-chart.js"],"names":["chart","type","restrict","scope","data","labels","options","series","colours","chartType","legend","click","link","elem","resetChart","newVal","isEmpty","destroy","createChart","container","document","createElement","className","replaceWith","appendChild","G_vmlCanvasManager","initElement","$watch","oldVal","length","Array","isArray","canUpdateChart","updateChart","$on","reduce","sum","carry","val","cvs","ctx","getContext","getDataSets","getData","Chart","onclick","evt","getPointsAtEvent","getBarsAtEvent","getSegmentsAtEvent","activePoints","call","$apply","setLegend","$parent","parent","$oldLegend","find","generateLegend","append","values","datasets","forEach","dataset","i","updateColours","points","bars","dataItem","j","value","segments","segment","update","item","colour","fillColor","highlightColor","strokeColor","pointColor","pointStrokeColor","defaults","global","map","dataSet","clone","label","obj","newObj","key","hasOwnProperty","color","highlight","pointHighlightStroke","Object","keys","responsive","multiTooltipTemplate","pointHighlightFill","angular","module","directive"],"mappings":"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","file":"angular-chart.js","sourcesContent":["(function () {\n  \"use strict\";\n\n  Chart.defaults.global.responsive = true;\n  Chart.defaults.global.multiTooltipTemplate = \"<%if (datasetLabel){%><%=datasetLabel%>: <%}%><%= value %>\";\n\n  Chart.defaults.global.colours = [\n    { // blue\n      fillColor: \"rgba(151,187,205,0.2)\",\n      strokeColor: \"rgba(151,187,205,1)\",\n      pointColor: \"rgba(151,187,205,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(151,187,205,0.8)\"\n    },\n    { // light grey\n      fillColor: \"rgba(220,220,220,0.2)\",\n      strokeColor: \"rgba(220,220,220,1)\",\n      pointColor: \"rgba(220,220,220,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(220,220,220,0.8)\"\n    },\n    { // red\n      fillColor: \"rgba(247,70,74,0.2)\",\n      strokeColor: \"rgba(247,70,74,1)\",\n      pointColor: \"rgba(247,70,74,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(247,70,74,0.8)\"\n    },\n    { // green\n      fillColor: \"rgba(70,191,189,0.2)\",\n      strokeColor: \"rgba(70,191,189,1)\",\n      pointColor: \"rgba(70,191,189,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(70,191,189,0.8)\"\n    },\n    { // yellow\n      fillColor: \"rgba(253,180,92,0.2)\",\n      strokeColor: \"rgba(253,180,92,1)\",\n      pointColor: \"rgba(253,180,92,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(253,180,92,0.8)\"\n    },\n    { // grey\n      fillColor: \"rgba(148,159,177,0.2)\",\n      strokeColor: \"rgba(148,159,177,1)\",\n      pointColor: \"rgba(148,159,177,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(148,159,177,0.8)\"\n    },\n    { // dark grey\n      fillColor: \"rgba(77,83,96,0.2)\",\n      strokeColor: \"rgba(77,83,96,1)\",\n      pointColor: \"rgba(77,83,96,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(77,83,96,1)\"\n    }\n  ];\n\n  angular.module(\"chart.js\", [])\n    .directive(\"chartBase\", function () { return chart(); })\n    .directive(\"chartLine\", function () { return chart('Line'); })\n    .directive(\"chartBar\", function () { return chart('Bar'); })\n    .directive(\"chartRadar\", function () { return chart('Radar'); })\n    .directive(\"chartDoughnut\", function () { return chart('Doughnut'); })\n    .directive(\"chartPie\", function () { return chart('Pie'); })\n    .directive(\"chartPolarArea\", function () { return chart('PolarArea'); });\n\n  function chart (type) {\n    return {\n      restrict: 'CA',\n      scope: {\n        data: '=',\n        labels: '=',\n        options: '=',\n        series: '=',\n        colours: '=',\n        chartType: '=',\n        legend: '@',\n        click: '='\n      },\n      link: function (scope, elem, attrs) {\n        var chart, container = document.createElement('div');\n        container.className = 'chart-container';\n        elem.replaceWith(container);\n        container.appendChild(elem[0]);\n\n        if (typeof G_vmlCanvasManager === 'object' && G_vmlCanvasManager !== null) {\n          if (typeof G_vmlCanvasManager.initElement === 'function') {\n              G_vmlCanvasManager.initElement(elem[0]);\n          }\n        }\n\n        scope.$watch('data', function (newVal, oldVal) {\n          if (! newVal || ! newVal.length || (Array.isArray(newVal[0]) && ! newVal[0].length)) return;\n          var chartType = type || scope.chartType;\n          if (! chartType) return;\n\n          if (chart) {\n            if (canUpdateChart(newVal, oldVal)) return updateChart(chart, newVal, scope);\n            chart.destroy();\n          }\n\n          chart = createChart(chartType, scope, elem);\n        }, true);\n\n        scope.$watch('series', resetChart, true);\n        scope.$watch('labels', resetChart, true);\n        scope.$watch('options', resetChart, true);\n\n        scope.$watch('chartType', function (newVal, oldVal) {\n          if (! newVal) return;\n          if (chart) chart.destroy();\n          chart = createChart(newVal, scope, elem);\n        });\n\n        scope.$on('$destroy', function () {\n          if (chart) chart.destroy();\n        });\n\n        function resetChart (newVal, oldVal) {\n          if (isEmpty(newVal)) return;\n          var chartType = type || scope.chartType;\n          if (! chartType) return;\n\n          // chart.update() doesn't work for series and labels\n          // so we have to re-create the chart entirely\n          if (chart) chart.destroy();\n\n          chart = createChart(chartType, scope, elem);\n        }\n      }\n    };\n  }\n\n  function canUpdateChart(newVal, oldVal) {\n    if (newVal && oldVal && newVal.length && oldVal.length) {\n      return Array.isArray(newVal[0]) ?\n        newVal.length === oldVal.length && newVal[0].length === oldVal[0].length :\n        oldVal.reduce(sum, 0) > 0 ? newVal.length === oldVal.length : false;\n    }\n    return false;\n  }\n\n  function sum (carry, val) {\n    return carry + val;\n  }\n\n  function createChart (type, scope, elem) {\n    if (! scope.data || ! scope.data.length) return;\n    var cvs = elem[0], ctx = cvs.getContext(\"2d\");\n    var data = Array.isArray(scope.data[0]) ?\n      getDataSets(scope.labels, scope.data, scope.series || [], scope.colours) :\n      getData(scope.labels, scope.data, scope.colours);\n    var chart = new Chart(ctx)[type](data, scope.options || {});\n    if (scope.click) {\n      cvs.onclick = function (evt) {\n        var click = chart.getPointsAtEvent || chart.getBarsAtEvent || chart.getSegmentsAtEvent;\n\n        if (click) {\n          var activePoints = click.call(chart, evt);\n          scope.click(activePoints, evt);\n          scope.$apply();\n        }\n      };\n    }\n    if (scope.legend && scope.legend !== 'false') setLegend(elem, chart);\n    return chart;\n  }\n\n  function setLegend (elem, chart) {\n    var $parent = elem.parent(),\n        $oldLegend = $parent.find('chart-legend'),\n        legend = '<chart-legend>' + chart.generateLegend() + '</chart-legend>';\n    if ($oldLegend.length) $oldLegend.replaceWith(legend);\n    else $parent.append(legend);\n  }\n\n  function updateChart (chart, values, scope) {\n    if (Array.isArray(scope.data[0])){\n        chart.datasets.forEach(function (dataset, i) {\n          if (scope.colours) updateColours(dataset, scope.colours[i]);\n          (dataset.points || dataset.bars).forEach(function (dataItem, j) {\n            dataItem.value = values[i][j];\n          });\n      });\n    } else {\n      chart.segments.forEach(function (segment, i) {\n        segment.value = values[i];\n        if (scope.colours) updateColours(segment, scope.colours[i]);\n      });\n    }\n    chart.update();\n  }\n\n  function updateColours (item, colour) {\n    item.fillColor = colour.fillColor;\n    item.highlightColor = colour.highlightColor;\n    item.strokeColor = colour.strokeColor;\n    item.pointColor = colour.pointColor;\n    item.pointStrokeColor = colour.pointStrokeColor;\n  }\n\n  function getDataSets (labels, data, series, colours) {\n    colours = colours || Chart.defaults.global.colours;\n    return {\n      labels: labels,\n      datasets: data.map(function (item, i) {\n        var dataSet = clone(colours[i]);\n        dataSet.label = series[i];\n        dataSet.data = item;\n        return dataSet;\n      })\n    };\n  }\n\n  function clone (obj) {\n    var newObj = {};\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key))\n        newObj[key] = obj[key];\n    }\n    return newObj;\n  }\n\n  function getData (labels, data, colours) {\n    colours = colours || Chart.defaults.global.colours;\n    return labels.map(function (label, i) {\n      return {\n        label: label,\n        value: data[i],\n        color: colours[i].strokeColor,\n        highlight: colours[i].pointHighlightStroke\n      };\n    });\n  }\n\n  function isEmpty (value) {\n    return ! value ||\n      (Array.isArray(value) && ! value.length) ||\n      (typeof value === 'object' && ! Object.keys(value).length);\n  }\n\n})();\n"],"sourceRoot":"/source/"}