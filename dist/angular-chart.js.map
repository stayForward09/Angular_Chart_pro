{"version":3,"sources":["angular-chart.js"],"names":["chart","type","restrict","scope","data","labels","options","series","colours","chartType","legend","click","link","elem","resetChart","newVal","isEmpty","destroy","createChart","container","document","createElement","className","replaceWith","appendChild","window","G_vmlCanvasManager","initElement","$watch","oldVal","length","Array","isArray","canUpdateChart","updateChart","$on","reduce","sum","carry","val","cvs","ctx","getContext","getDataSets","getData","Chart","$emit","onclick","evt","getPointsAtEvent","getBarsAtEvent","getSegmentsAtEvent","activePoints","call","$apply","setLegend","$parent","parent","$oldLegend","find","generateLegend","append","values","datasets","forEach","dataset","i","updateColours","points","bars","dataItem","j","value","segments","segment","update","item","colour","fillColor","highlightColor","strokeColor","pointColor","pointStrokeColor","defaults","global","map","dataSet","angular","copy","label","color","highlight","pointHighlightStroke","Object","keys","responsive","multiTooltipTemplate","pointHighlightFill","module","directive"],"mappings":"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","file":"angular-chart.js","sourcesContent":["(function () {\n  'use strict';\n\n  Chart.defaults.global.responsive = true;\n  Chart.defaults.global.multiTooltipTemplate = '<%if (datasetLabel){%><%=datasetLabel%>: <%}%><%= value %>';\n\n  Chart.defaults.global.colours = [\n    { // blue\n      fillColor: 'rgba(151,187,205,0.2)',\n      strokeColor: 'rgba(151,187,205,1)',\n      pointColor: 'rgba(151,187,205,1)',\n      pointStrokeColor: '#fff',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(151,187,205,0.8)'\n    },\n    { // light grey\n      fillColor: 'rgba(220,220,220,0.2)',\n      strokeColor: 'rgba(220,220,220,1)',\n      pointColor: 'rgba(220,220,220,1)',\n      pointStrokeColor: '#fff',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(220,220,220,0.8)'\n    },\n    { // red\n      fillColor: 'rgba(247,70,74,0.2)',\n      strokeColor: 'rgba(247,70,74,1)',\n      pointColor: 'rgba(247,70,74,1)',\n      pointStrokeColor: '#fff',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(247,70,74,0.8)'\n    },\n    { // green\n      fillColor: 'rgba(70,191,189,0.2)',\n      strokeColor: 'rgba(70,191,189,1)',\n      pointColor: 'rgba(70,191,189,1)',\n      pointStrokeColor: '#fff',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(70,191,189,0.8)'\n    },\n    { // yellow\n      fillColor: 'rgba(253,180,92,0.2)',\n      strokeColor: 'rgba(253,180,92,1)',\n      pointColor: 'rgba(253,180,92,1)',\n      pointStrokeColor: '#fff',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(253,180,92,0.8)'\n    },\n    { // grey\n      fillColor: 'rgba(148,159,177,0.2)',\n      strokeColor: 'rgba(148,159,177,1)',\n      pointColor: 'rgba(148,159,177,1)',\n      pointStrokeColor: '#fff',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(148,159,177,0.8)'\n    },\n    { // dark grey\n      fillColor: 'rgba(77,83,96,0.2)',\n      strokeColor: 'rgba(77,83,96,1)',\n      pointColor: 'rgba(77,83,96,1)',\n      pointStrokeColor: '#fff',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(77,83,96,1)'\n    }\n  ];\n\n  angular.module('chart.js', [])\n    .directive('chartBase', function () { return chart(); })\n    .directive('chartLine', function () { return chart('Line'); })\n    .directive('chartBar', function () { return chart('Bar'); })\n    .directive('chartRadar', function () { return chart('Radar'); })\n    .directive('chartDoughnut', function () { return chart('Doughnut'); })\n    .directive('chartPie', function () { return chart('Pie'); })\n    .directive('chartPolarArea', function () { return chart('PolarArea'); });\n\n  function chart (type) {\n    return {\n      restrict: 'CA',\n      scope: {\n        data: '=',\n        labels: '=',\n        options: '=',\n        series: '=',\n        colours: '=',\n        chartType: '=',\n        legend: '@',\n        click: '='\n      },\n      link: function (scope, elem/*, attrs */) {\n        var chart, container = document.createElement('div');\n        container.className = 'chart-container';\n        elem.replaceWith(container);\n        container.appendChild(elem[0]);\n\n        if (typeof window.G_vmlCanvasManager === 'object' && window.G_vmlCanvasManager !== null) {\n          if (typeof window.G_vmlCanvasManager.initElement === 'function') {\n            window.G_vmlCanvasManager.initElement(elem[0]);\n          }\n        }\n\n        scope.$watch('data', function (newVal, oldVal) {\n          if (! newVal || ! newVal.length || (Array.isArray(newVal[0]) && ! newVal[0].length)) return;\n          var chartType = type || scope.chartType;\n          if (! chartType) return;\n\n          if (chart) {\n            if (canUpdateChart(newVal, oldVal)) return updateChart(chart, newVal, scope);\n            chart.destroy();\n          }\n\n          chart = createChart(chartType, scope, elem);\n        }, true);\n\n        scope.$watch('series', resetChart, true);\n        scope.$watch('labels', resetChart, true);\n        scope.$watch('options', resetChart, true);\n\n        scope.$watch('chartType', function (newVal/*, oldVal */) {\n          if (! newVal) return;\n          if (chart) chart.destroy();\n          chart = createChart(newVal, scope, elem);\n        });\n\n        scope.$on('$destroy', function () {\n          if (chart) chart.destroy();\n        });\n\n        function resetChart (newVal/*, oldVal*/) {\n          if (isEmpty(newVal)) return;\n          var chartType = type || scope.chartType;\n          if (! chartType) return;\n\n          // chart.update() doesn't work for series and labels\n          // so we have to re-create the chart entirely\n          if (chart) chart.destroy();\n\n          chart = createChart(chartType, scope, elem);\n        }\n      }\n    };\n  }\n\n  function canUpdateChart(newVal, oldVal) {\n    if (newVal && oldVal && newVal.length && oldVal.length) {\n      return Array.isArray(newVal[0]) ?\n      newVal.length === oldVal.length && newVal[0].length === oldVal[0].length :\n        oldVal.reduce(sum, 0) > 0 ? newVal.length === oldVal.length : false;\n    }\n    return false;\n  }\n\n  function sum (carry, val) {\n    return carry + val;\n  }\n\n  function createChart (type, scope, elem) {\n    if (! scope.data || ! scope.data.length) return;\n    var cvs = elem[0], ctx = cvs.getContext('2d');\n    var data = Array.isArray(scope.data[0]) ?\n      getDataSets(scope.labels, scope.data, scope.series || [], scope.colours) :\n      getData(scope.labels, scope.data, scope.colours);\n    var chart = new Chart(ctx)[type](data, scope.options || {});\n    scope.$emit('create', chart);\n    if (scope.click) {\n      cvs.onclick = function (evt) {\n        var click = chart.getPointsAtEvent || chart.getBarsAtEvent || chart.getSegmentsAtEvent;\n\n        if (click) {\n          var activePoints = click.call(chart, evt);\n          scope.click(activePoints, evt);\n          scope.$apply();\n        }\n      };\n    }\n    if (scope.legend && scope.legend !== 'false') setLegend(elem, chart);\n    return chart;\n  }\n\n  function setLegend (elem, chart) {\n    var $parent = elem.parent(),\n      $oldLegend = $parent.find('chart-legend'),\n      legend = '<chart-legend>' + chart.generateLegend() + '</chart-legend>';\n    if ($oldLegend.length) $oldLegend.replaceWith(legend);\n    else $parent.append(legend);\n  }\n\n  function updateChart (chart, values, scope) {\n    if (Array.isArray(scope.data[0])) {\n      chart.datasets.forEach(function (dataset, i) {\n        if (scope.colours) updateColours(dataset, scope.colours[i]);\n        (dataset.points || dataset.bars).forEach(function (dataItem, j) {\n          dataItem.value = values[i][j];\n        });\n      });\n    } else {\n      chart.segments.forEach(function (segment, i) {\n        segment.value = values[i];\n        if (scope.colours) updateColours(segment, scope.colours[i]);\n      });\n    }\n    chart.update();\n    scope.$emit('update', chart);\n  }\n\n  function updateColours (item, colour) {\n    item.fillColor = colour.fillColor;\n    item.highlightColor = colour.highlightColor;\n    item.strokeColor = colour.strokeColor;\n    item.pointColor = colour.pointColor;\n    item.pointStrokeColor = colour.pointStrokeColor;\n  }\n\n  function getDataSets (labels, data, series, colours) {\n    colours = colours || Chart.defaults.global.colours;\n    return {\n      labels: labels,\n      datasets: data.map(function (item, i) {\n        var dataSet = angular.copy(colours[i]);\n        dataSet.label = series[i];\n        dataSet.data = item;\n        return dataSet;\n      })\n    };\n  }\n\n  function getData (labels, data, colours) {\n    colours = colours || Chart.defaults.global.colours;\n    return labels.map(function (label, i) {\n      return {\n        label: label,\n        value: data[i],\n        color: colours[i].strokeColor,\n        highlight: colours[i].pointHighlightStroke\n      };\n    });\n  }\n\n  function isEmpty (value) {\n    return ! value ||\n      (Array.isArray(value) && ! value.length) ||\n      (typeof value === 'object' && ! Object.keys(value).length);\n  }\n\n})();\n"],"sourceRoot":"/source/"}