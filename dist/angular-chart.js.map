{"version":3,"file":"angular-chart.js","sources":["angular-chart.js"],"names":["chart","type","restrict","scope","id","data","labels","options","legend","click","link","elem","$watch","newVal","hasDataSets","Array","isArray","length","datasets","forEach","dataset","i","points","map","point","j","value","segments","segment","update","getGraph","parent","append","generateLegend","cvs","document","getElementById","ctx","getContext","getDataSets","getData","Chart","onclick","evt","getPointsAtEvent","getSegmentsAtEvent","activePoints","indexOf","item","dataSet","clone","config","key","Object","keys","label","obj","newObj","hasOwnProperty","color","strokeColor","highlight","pointHighlightStroke","defaults","global","responsive","fillColor","pointColor","pointStrokeColor","pointHighlightFill","angular","module","directive"],"mappings":"CAAA,WACE,YAuEA,SAASA,GAAOC,GACd,OACEC,SAAU,KACVC,OACEC,GAAI,IACJC,KAAM,IACNC,OAAQ,IACRC,QAAS,IACTC,OAAQ,IACRC,MAAO,KAETC,KAAM,SAAUP,EAAOQ,GACrB,GAAIX,EAEJG,GAAMS,OAAO,OAAQ,SAAUC,GACzBC,EAAYb,IAASc,MAAMC,QAAQH,EAAO,MAASA,EAAO,GAAGI,SAC3DjB,GAMAc,EAAYb,GACdD,EAAMkB,SAASC,QAAQ,SAAUC,EAASC,GACxCD,EAAQE,OAASF,EAAQE,OAAOC,IAAI,SAAUC,EAAOC,GAEnD,MADAD,GAAME,MAAQb,EAAOQ,GAAGI,GACjBD,MAIXxB,EAAM2B,SAASR,QAAQ,SAAUS,EAASP,GACxCO,EAAQF,MAAQb,EAAOQ,KAG3BrB,EAAM6B,WAjBN7B,EAAQ8B,EAAS7B,EAAME,GACnBA,EAAMK,QACRG,EAAKoB,SAASC,OAAOhC,EAAMiC,sBAiB9B,KAKT,QAASH,GAAU7B,EAAME,GACvB,GAAI+B,GAAMC,SAASC,eAAejC,EAAMC,IAAKiC,EAAMH,EAAII,WAAW,MAC9DjC,EAAOS,EAAYb,GAAQsC,EAAYpC,EAAMG,OAAQH,EAAME,MAAQmC,EAAQrC,EAAMG,OAAQH,EAAME,MAC/FL,EAAQ,GAAIyC,OAAMJ,GAAKpC,GAAMI,EAAMF,EAAMI,YAS7C,OARIJ,GAAMM,QACRyB,EAAIQ,QAAU,SAAUC,GACtB,GAAI3C,EAAM4C,kBAAoB5C,EAAM6C,mBAAoB,CACtD,GAAIC,GAAehC,EAAYb,GAAQD,EAAM4C,iBAAiBD,GAAO3C,EAAM6C,mBAAmBF,EAC9FxC,GAAMM,MAAMqC,EAAcH,MAIzB3C,EAGT,QAASc,GAAab,GACpB,OAAQ,OAAQ,MAAO,SAAS8C,QAAQ9C,GAAQ,GAGlD,QAASsC,GAAajC,EAAQD,GAC5B,OACEC,OAAQA,EACRY,SAAUb,EAAKkB,IAAI,SAAUyB,EAAM3B,GACjC,GAAI4B,GAAUC,EAAMC,EAAO9B,GAC3B,IAAMN,MAAMC,QAAQgC,GAKlBC,EAAQ5C,KAAO2C,MALU,CACzB,GAAII,GAAMC,OAAOC,KAAKN,GAAM,EAC5BC,GAAQM,MAAQH,EAChBH,EAAQ5C,KAAO2C,EAAKI,GAItB,MAAOH,MAKb,QAASC,GAAOM,GACd,GAAIC,KACJ,KAAK,GAAIL,KAAOI,GACVA,EAAIE,eAAeN,KAAMK,EAAOL,GAAOI,EAAIJ,GAEjD,OAAOK,GAGT,QAASjB,GAASlC,EAAQD,GACxB,MAAOC,GAAOiB,IAAI,SAAUgC,EAAOlC,GACjC,OACEkC,MAAOA,EACP7B,MAAOrB,EAAKgB,GACZsC,MAAOR,EAAO9B,GAAGuC,YACjBC,UAAWV,EAAO9B,GAAGyC,wBAhK3BrB,MAAMsB,SAASC,OAAOC,YAAa,CAEnC,IAAId,KAEAe,UAAW,wBACXN,YAAa,sBACbO,WAAY,sBACZC,iBAAkB,OAClBC,mBAAoB,OACpBP,qBAAsB,wBAGtBI,UAAW,wBACXN,YAAa,sBACbO,WAAY,sBACZC,iBAAkB,OAClBC,mBAAoB,OACpBP,qBAAsB,wBAGtBI,UAAW,yBACXN,YAAa,uBACbO,WAAY,uBACZC,iBAAkB,OAClBC,mBAAoB,OACpBP,qBAAsB,yBAGtBI,UAAW,0BACXN,YAAa,wBACbO,WAAY,wBACZC,iBAAkB,OAClBC,mBAAoB,OACpBP,qBAAsB,0BAGtBI,UAAW,0BACXN,YAAa,wBACbO,WAAY,wBACZC,iBAAkB,OAClBC,mBAAoB,OACpBP,qBAAsB,0BAGtBI,UAAW,2BACXN,YAAa,yBACbO,WAAY,yBACZC,iBAAkB,OAClBC,mBAAoB,OACpBP,qBAAsB,2BAGtBI,UAAW,wBACXN,YAAa,sBACbO,WAAY,sBACZC,iBAAkB,OAClBC,mBAAoB,OACpBP,qBAAsB,uBAI1BQ,SAAQC,OAAO,aACZC,UAAU,YAAa,WAAc,MAAOxE,GAAM,UAClDwE,UAAU,WAAY,WAAc,MAAOxE,GAAM,SACjDwE,UAAU,aAAc,WAAc,MAAOxE,GAAM,WACnDwE,UAAU,gBAAiB,WAAc,MAAOxE,GAAM,cACtDwE,UAAU,WAAY,WAAc,MAAOxE,GAAM,SACjDwE,UAAU,iBAAkB,WAAc,MAAOxE,GAAM","sourcesContent":["(function () {\n  \"use strict\";\n\n  Chart.defaults.global.responsive = true;\n\n  var config = [\n    { // blue\n      fillColor: \"rgba(151,187,205,0.2)\",\n      strokeColor: \"rgba(151,187,205,1)\",\n      pointColor: \"rgba(151,187,205,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(151,187,205,1)\"\n    },\n    { // light grey\n      fillColor: \"rgba(220,220,220,0.2)\",\n      strokeColor: \"rgba(220,220,220,1)\",\n      pointColor: \"rgba(220,220,220,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(220,220,220,1)\"\n    },\n    { // red\n      fillColor: \"rgba(247, 70, 74, 0.2)\",\n      strokeColor: \"rgba(247, 70, 74, 1)\",\n      pointColor: \"rgba(247, 70, 74, 1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(247, 70, 74, 1)\"\n    },\n    { // yellow\n      fillColor: \"rgba(70, 191, 189, 0.2)\",\n      strokeColor: \"rgba(70, 191, 189, 1)\",\n      pointColor: \"rgba(70, 191, 189, 1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(70, 191, 189, 1)\"\n    },\n    { // green\n      fillColor: \"rgba(253, 180, 92, 0.2)\",\n      strokeColor: \"rgba(253, 180, 92, 1)\",\n      pointColor: \"rgba(253, 180, 92, 1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(253, 180, 92, 1)\"\n    },\n    { // grey\n      fillColor: \"rgba(148, 159, 177, 0.2)\",\n      strokeColor: \"rgba(148, 159, 177, 1)\",\n      pointColor: \"rgba(148, 159, 177, 1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(148, 159, 177, 1)\"\n    },\n    { // dark grey\n      fillColor: \"rgba(77, 83, 96, 0.2)\",\n      strokeColor: \"rgba(77, 83, 96, 1)\",\n      pointColor: \"rgba(77, 83, 96, 1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(77, 83, 96, 1)\"\n    }\n  ];\n\n  angular.module(\"charts\", [])\n    .directive(\"chartLine\", function () { return chart('Line'); })\n    .directive(\"chartBar\", function () { return chart('Bar'); })\n    .directive(\"chartRadar\", function () { return chart('Radar'); })\n    .directive(\"chartDoughnut\", function () { return chart('Doughnut'); })\n    .directive(\"chartPie\", function () { return chart('Pie'); })\n    .directive(\"chartPolarArea\", function () { return chart('PolarArea'); });\n\n  function chart (type) {\n    return {\n      restrict: 'CA',\n      scope: {\n        id: '@',\n        data: '=',\n        labels: '=',\n        options: '=',\n        legend: '@',\n        click: '='\n      },\n      link: function (scope, elem, attrs) {\n        var chart;\n\n        scope.$watch('data', function (newVal, oldVal) {\n          if (hasDataSets(type) && Array.isArray(newVal[0]) && ! newVal[0].length) return;\n          if (! chart) {\n            chart = getGraph(type, scope);\n            if (scope.legend) {\n              elem.parent().append(chart.generateLegend());\n            }\n          } else {\n            if (hasDataSets(type)){\n              chart.datasets.forEach(function (dataset, i) {\n                dataset.points = dataset.points.map(function (point, j) {\n                  point.value = newVal[i][j];\n                  return point;\n                });\n              });\n            } else {\n              chart.segments.forEach(function (segment, i) {\n                segment.value = newVal[i];\n              });\n            }\n            chart.update();\n          }\n        }, true);\n      }\n    };\n  }\n\n  function getGraph (type, scope) {\n    var cvs = document.getElementById(scope.id), ctx = cvs.getContext(\"2d\");\n    var data = hasDataSets(type) ? getDataSets(scope.labels, scope.data) : getData(scope.labels, scope.data);\n    var chart = new Chart(ctx)[type](data, scope.options || {});\n    if (scope.click) {\n      cvs.onclick = function (evt) {\n        if (chart.getPointsAtEvent || chart.getSegmentsAtEvent) {\n          var activePoints = hasDataSets(type) ? chart.getPointsAtEvent(evt) : chart.getSegmentsAtEvent(evt);\n          scope.click(activePoints, evt);\n        }\n      };\n    }\n    return chart;\n  }\n\n  function hasDataSets (type) {\n    return ['Line', 'Bar', 'Radar'].indexOf(type) > -1;\n  }\n\n  function getDataSets (labels, data) {\n    return {\n      labels: labels,\n      datasets: data.map(function (item, i) {\n        var dataSet = clone(config[i]);\n        if (! Array.isArray(item)) {\n          var key = Object.keys(item)[0];\n          dataSet.label = key;\n          dataSet.data = item[key];\n        } else {\n          dataSet.data = item;\n        }\n        return dataSet;\n      })\n    };\n  }\n\n  function clone (obj) {\n    var newObj = {};\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) newObj[key] = obj[key];\n    }\n    return newObj;\n  }\n\n  function getData (labels, data) {\n    return labels.map(function (label, i) {\n      return {\n        label: label,\n        value: data[i],\n        color: config[i].strokeColor,\n        highlight: config[i].pointHighlightStroke\n      };\n    });\n  }\n\n})();"],"sourceRoot":"/source/"}