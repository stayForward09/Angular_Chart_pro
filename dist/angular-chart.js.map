{"version":3,"sources":["angular-chart.js"],"names":["chart","type","restrict","scope","data","labels","options","series","colours","chartType","legend","click","link","elem","container","document","createElement","className","replaceWith","appendChild","$watch","newVal","oldVal","length","hasDataSets","canUpdateChart","updateChart","destroy","createChart","cvs","ctx","getContext","getDataSets","getData","Chart","onclick","evt","getPointsAtEvent","getSegmentsAtEvent","activePoints","setLegend","$parent","parent","$oldLegend","find","generateLegend","append","values","datasets","forEach","dataset","i","updateColours","points","bars","dataItem","j","value","segments","segment","update","item","colour","fillColor","highlightColor","strokeColor","pointColor","pointStrokeColor","indexOf","defaults","global","map","dataSet","clone","label","obj","newObj","key","hasOwnProperty","color","highlight","pointHighlightStroke","responsive","multiTooltipTemplate","pointHighlightFill","angular","module","directive"],"mappings":"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","file":"angular-chart.js","sourcesContent":["(function () {\n  \"use strict\";\n\n  Chart.defaults.global.responsive = true;\n  Chart.defaults.global.multiTooltipTemplate = \"<%if (datasetLabel){%><%=datasetLabel%>: <%}%><%= value %>\";\n\n  Chart.defaults.global.colours = [\n    { // blue\n      fillColor: \"rgba(151,187,205,0.2)\",\n      strokeColor: \"rgba(151,187,205,1)\",\n      pointColor: \"rgba(151,187,205,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(151,187,205,0.8)\"\n    },\n    { // light grey\n      fillColor: \"rgba(220,220,220,0.2)\",\n      strokeColor: \"rgba(220,220,220,1)\",\n      pointColor: \"rgba(220,220,220,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(220,220,220,0.8)\"\n    },\n    { // red\n      fillColor: \"rgba(247,70,74,0.2)\",\n      strokeColor: \"rgba(247,70,74,1)\",\n      pointColor: \"rgba(247,70,74,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(247,70,74,0.8)\"\n    },\n    { // green\n      fillColor: \"rgba(70,191,189,0.2)\",\n      strokeColor: \"rgba(70,191,189,1)\",\n      pointColor: \"rgba(70,191,189,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(70,191,189,0.8)\"\n    },\n    { // yellow\n      fillColor: \"rgba(253,180,92,0.2)\",\n      strokeColor: \"rgba(253,180,92,1)\",\n      pointColor: \"rgba(253,180,92,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(253,180,92,0.8)\"\n    },\n    { // grey\n      fillColor: \"rgba(148,159,177,0.2)\",\n      strokeColor: \"rgba(148,159,177,1)\",\n      pointColor: \"rgba(148,159,177,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(148,159,177,0.8)\"\n    },\n    { // dark grey\n      fillColor: \"rgba(77,83,96,0.2)\",\n      strokeColor: \"rgba(77,83,96,1)\",\n      pointColor: \"rgba(77,83,96,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(77,83,96,1)\"\n    }\n  ];\n\n  angular.module(\"chart.js\", [])\n    .directive(\"chartBase\", function () { return chart(); })\n    .directive(\"chartLine\", function () { return chart('Line'); })\n    .directive(\"chartBar\", function () { return chart('Bar'); })\n    .directive(\"chartRadar\", function () { return chart('Radar'); })\n    .directive(\"chartDoughnut\", function () { return chart('Doughnut'); })\n    .directive(\"chartPie\", function () { return chart('Pie'); })\n    .directive(\"chartPolarArea\", function () { return chart('PolarArea'); });\n\n  function chart (type) {\n    return {\n      restrict: 'CA',\n      scope: {\n        data: '=',\n        labels: '=',\n        options: '=',\n        series: '=',\n        colours: '=',\n        chartType: '=',\n        legend: '@',\n        click: '='\n      },\n      link: function (scope, elem, attrs) {\n        var chart, container = document.createElement('div');\n        container.className = 'chart-container';\n        elem.replaceWith(container);\n        container.appendChild(elem[0]);\n\n        scope.$watch('data', function (newVal, oldVal) {\n          if (! newVal || ! newVal.length || (hasDataSets(type) && ! newVal[0].length)) return;\n          var chartType = type || scope.chartType;\n          if (! chartType) return;\n\n          if (chart) {\n            if (canUpdateChart(chartType, newVal, oldVal)) return updateChart(chart, chartType, newVal, scope);\n            chart.destroy();\n          }\n\n          chart = createChart(chartType, scope, elem);\n        }, true);\n\n        scope.$watch('chartType', function (newVal, oldVal) {\n          if (! newVal) return;\n          if (chart) chart.destroy();\n          chart = createChart(newVal, scope, elem);\n        });\n      }\n    };\n  }\n\n  function canUpdateChart(type, newVal, oldVal) {\n    if (newVal && oldVal && newVal.length && oldVal.length) {\n      return hasDataSets(type) ?\n        newVal.length === oldVal.length && newVal[0].length === oldVal[0].length :\n        newVal.length === oldVal.length;\n    }\n    return false;\n  }\n\n  function createChart (type, scope, elem) {\n    var cvs = elem[0], ctx = cvs.getContext(\"2d\");\n    var data = hasDataSets(type) ?\n      getDataSets(scope.labels, scope.data, scope.series || [], scope.colours) :\n      getData(scope.labels, scope.data, scope.colours);\n    var chart = new Chart(ctx)[type](data, scope.options || {});\n    if (scope.click) {\n      cvs.onclick = function (evt) {\n        if (chart.getPointsAtEvent || chart.getSegmentsAtEvent) {\n          var activePoints = hasDataSets(type) ? chart.getPointsAtEvent(evt) : chart.getSegmentsAtEvent(evt);\n          scope.click(activePoints, evt);\n        }\n      };\n    }\n    if (scope.legend) setLegend(elem, chart);\n    return chart;\n  }\n\n  function setLegend (elem, chart) {\n    var $parent = elem.parent(),\n        $oldLegend = $parent.find('chart-legend'),\n        legend = '<chart-legend>' + chart.generateLegend() + '</chart-legend>';\n    if ($oldLegend.length) $oldLegend.replaceWith(legend);\n    else $parent.append(legend);\n  }\n\n  function updateChart (chart, type, values, scope) {\n    if (hasDataSets(type)){\n        chart.datasets.forEach(function (dataset, i) {\n          if (scope.colours) updateColours(dataset, scope.colours[i]);\n          (dataset.points || dataset.bars).forEach(function (dataItem, j) {\n            dataItem.value = values[i][j];\n          });\n      });\n    } else {\n      chart.segments.forEach(function (segment, i) {\n        segment.value = values[i];\n        if (scope.colours) updateColours(segment, scope.colours[i]);\n      });\n    }\n    chart.update();\n  }\n\n  function updateColours (item, colour) {\n    item.fillColor = colour.fillColor;\n    item.highlightColor = colour.highlightColor;\n    item.strokeColor = colour.strokeColor;\n    item.pointColor = colour.pointColor;\n    item.pointStrokeColor = colour.pointStrokeColor;\n  }\n\n  function hasDataSets (type) {\n    return ['Line', 'Bar', 'Radar'].indexOf(type) > -1;\n  }\n\n  function getDataSets (labels, data, series, colours) {\n    colours = colours || Chart.defaults.global.colours;\n    return {\n      labels: labels,\n      datasets: data.map(function (item, i) {\n        var dataSet = clone(colours[i]);\n        dataSet.label = series[i];\n        dataSet.data = item;\n        return dataSet;\n      })\n    };\n  }\n\n  function clone (obj) {\n    var newObj = {};\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) newObj[key] = obj[key];\n    }\n    return newObj;\n  }\n\n  function getData (labels, data, colours) {\n    colours = colours || Chart.defaults.global.colours;\n    return labels.map(function (label, i) {\n      return {\n        label: label,\n        value: data[i],\n        color: colours[i].strokeColor,\n        highlight: colours[i].pointHighlightStroke\n      };\n    });\n  }\n\n})();\n"],"sourceRoot":"/source/"}