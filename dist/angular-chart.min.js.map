{"version":3,"sources":["angular-chart.min.js"],"names":["factory","exports","module","angular","require","Chart","define","amd","ChartJsProvider","options","ChartJs","getOptions","type","typeOptions","extend","this","setOptions","customOptions","$get","ChartJsFactory","$timeout","canUpdateChart","newVal","oldVal","length","Array","isArray","every","element","index","reduce","sum","carry","val","getEventHandler","scope","chart","action","triggerOnlyOnChange","lastState","evt","atEvent","getElementsAtEvent","getPointsAtEvent","activePoints","call","equals","$apply","getColors","colors","copy","chartColors","defaults","global","chartData","push","getColor","map","convertColor","color","hexToRgb","substr","getRandomColor","getRandomInt","backgroundColor","rgba","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","min","max","Math","floor","random","alpha","usingExcanvas","join","concat","hex","bigint","parseInt","r","g","b","getDataSets","labels","data","series","datasets","item","i","label","getData","hoverBackgroundColor","updateChart","values","forEach","dataset","update","$emit","isEmpty","value","Object","keys","isResponsive","chartOptions","responsive","restrict","chartType","chartLabels","chartSeries","chartClick","chartHover","link","elem","resetChart","destroy","createChart","clientHeight","cvs","ctx","getContext","onclick","noop","onmousemove","window","G_vmlCanvasManager","initElement","$watch","$on","multiTooltipTemplate","elements","line","borderWidth","rectangle","animation","provider","directive"],"mappings":"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","file":"angular-chart.min.js","sourcesContent":["(function (factory) {\n  'use strict';\n  if (typeof exports === 'object') {\n    // Node/CommonJS\n    module.exports = factory(\n      typeof angular !== 'undefined' ? angular : require('angular'),\n      typeof Chart !== 'undefined' ? Chart : require('chart.js'));\n  }  else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['angular', 'chart'], factory);\n  } else {\n    // Browser globals\n    factory(angular, Chart);\n  }\n}(function (angular, Chart) {\n  'use strict';\n\n  Chart.defaults.global.multiTooltipTemplate = '<%if (datasetLabel){%><%=datasetLabel%>: <%}%><%= value %>';\n  Chart.defaults.global.elements.line.borderWidth = 2;\n  Chart.defaults.global.elements.rectangle.borderWidth = 2;\n  Chart.defaults.global.colors = [\n    '#97BBCD', // blue\n    '#DCDCDC', // light grey\n    '#F7464A', // red\n    '#46BFBD', // green\n    '#FDB45C', // yellow\n    '#949FB1', // grey\n    '#4D5360'  // dark grey\n  ];\n\n  var usingExcanvas = typeof window.G_vmlCanvasManager === 'object' &&\n    window.G_vmlCanvasManager !== null &&\n    typeof window.G_vmlCanvasManager.initElement === 'function';\n\n  if (usingExcanvas) Chart.defaults.global.animation = false;\n\n  return angular.module('chart.js', [])\n    .provider('ChartJs', ChartJsProvider)\n    .factory('ChartJsFactory', ['ChartJs', '$timeout', ChartJsFactory])\n    .directive('chartBase', ['ChartJsFactory', function (ChartJsFactory) { return new ChartJsFactory(); }])\n    .directive('chartLine', ['ChartJsFactory', function (ChartJsFactory) { return new ChartJsFactory('line'); }])\n    .directive('chartBar', ['ChartJsFactory', function (ChartJsFactory) { return new ChartJsFactory('bar'); }])\n    .directive('chartRadar', ['ChartJsFactory', function (ChartJsFactory) { return new ChartJsFactory('radar'); }])\n    .directive('chartDoughnut', ['ChartJsFactory', function (ChartJsFactory) { return new ChartJsFactory('doughnut'); }])\n    .directive('chartPie', ['ChartJsFactory', function (ChartJsFactory) { return new ChartJsFactory('pie'); }])\n    .directive('chartPolarArea', ['ChartJsFactory', function (ChartJsFactory) { return new ChartJsFactory('polarArea'); }]);\n\n  /**\n   * Wrapper for chart.js\n   * Allows configuring chart js using the provider\n   *\n   * angular.module('myModule', ['chart.js']).config(function(ChartJsProvider) {\n   *   ChartJsProvider.setOptions({ responsive: true });\n   *   ChartJsProvider.setOptions('Line', { responsive: false });\n   * })))\n   */\n  function ChartJsProvider () {\n    var options = {};\n    var ChartJs = {\n      Chart: Chart,\n      getOptions: function (type) {\n        var typeOptions = type && options[type] || {};\n        return angular.extend({}, options, typeOptions);\n      }\n    };\n\n    /**\n     * Allow to set global options during configuration\n     */\n    this.setOptions = function (type, customOptions) {\n      // If no type was specified set option for the global object\n      if (! customOptions) {\n        customOptions = type;\n        options = angular.extend(options, customOptions);\n        return;\n      }\n      // Set options for the specific chart\n      options[type] = angular.extend(options[type] || {}, customOptions);\n    };\n\n    this.$get = function () {\n      return ChartJs;\n    };\n  }\n\n  function ChartJsFactory (ChartJs, $timeout) {\n    return function chart (type) {\n      return {\n        restrict: 'CA',\n        scope: {\n          getColor: '=?',\n          chartType: '=',\n          chartData: '=?',\n          chartLabels: '=?',\n          chartOptions: '=?',\n          chartSeries: '=?',\n          chartColors: '=?',\n          chartClick: '=?',\n          chartHover: '=?'\n        },\n        link: function (scope, elem/*, attrs */) {\n          var chart;\n\n          if (usingExcanvas) window.G_vmlCanvasManager.initElement(elem[0]);\n\n          // Order of setting \"watch\" matter\n\n          scope.$watch('chartData', function (newVal, oldVal) {\n            if (! newVal || ! newVal.length || (Array.isArray(newVal[0]) && ! newVal[0].length)) return;\n            var chartType = type || scope.chartType;\n            if (! chartType) return;\n\n            if (chart) {\n              if (canUpdateChart(newVal, oldVal)) return updateChart(chart, newVal, scope);\n              chart.destroy();\n            }\n\n            createChart(chartType);\n          }, true);\n\n          scope.$watch('chartSeries', resetChart, true);\n          scope.$watch('chartLabels', resetChart, true);\n          scope.$watch('chartOptions', resetChart, true);\n          scope.$watch('chartColors', resetChart, true);\n\n          scope.$watch('chartType', function (newVal, oldVal) {\n            if (isEmpty(newVal)) return;\n            if (angular.equals(newVal, oldVal)) return;\n            if (chart) chart.destroy();\n            createChart(newVal);\n          });\n\n          scope.$on('$destroy', function () {\n            if (chart) chart.destroy();\n          });\n\n          function resetChart (newVal, oldVal) {\n            if (isEmpty(newVal)) return;\n            if (angular.equals(newVal, oldVal)) return;\n            var chartType = type || scope.chartType;\n            if (! chartType) return;\n\n            // chart.update() doesn't work for series and labels\n            // so we have to re-create the chart entirely\n            if (chart) chart.destroy();\n\n            createChart(chartType);\n          }\n\n          function createChart (type) {\n            // TODO: check parent?\n            if (isResponsive(type, scope) && elem[0].clientHeight === 0) {\n              return $timeout(function () {\n                createChart(type);\n              }, 50, false);\n            }\n            if (! scope.chartData || ! scope.chartData.length) return;\n            scope.getColor = typeof scope.getColor === 'function' ? scope.getColor : getRandomColor;\n            scope.chartColors = getColors(type, scope);\n            var cvs = elem[0], ctx = cvs.getContext('2d');\n            var data = Array.isArray(scope.chartData[0]) ?\n              getDataSets(scope.chartLabels, scope.chartData, scope.chartSeries || [], scope.chartColors) :\n              getData(scope.chartLabels, scope.chartData, scope.chartColors);\n\n            var options = angular.extend({}, ChartJs.getOptions(type), scope.chartOptions);\n            chart = new ChartJs.Chart(ctx, {\n              type: type,\n              data: data,\n              options: options\n            });\n            scope.$emit('chart-create', chart);\n\n            // Bind events\n            cvs.onclick = scope.chartClick ? getEventHandler(scope, chart, 'chartClick', false) : angular.noop;\n            cvs.onmousemove = scope.chartHover ? getEventHandler(scope, chart, 'chartHover', true) : angular.noop;\n          }\n        }\n      };\n    };\n\n    function canUpdateChart (newVal, oldVal) {\n      if (newVal && oldVal && newVal.length && oldVal.length) {\n        return Array.isArray(newVal[0]) ?\n        newVal.length === oldVal.length && newVal.every(function (element, index) {\n          return element.length === oldVal[index].length; }) :\n          oldVal.reduce(sum, 0) > 0 ? newVal.length === oldVal.length : false;\n      }\n      return false;\n    }\n\n    function sum (carry, val) {\n      return carry + val;\n    }\n\n    function getEventHandler (scope, chart, action, triggerOnlyOnChange) {\n      var lastState = null;\n      return function (evt) {\n        var atEvent = chart.getElementsAtEvent || chart.getPointsAtEvent;\n        if (atEvent) {\n          var activePoints = atEvent.call(chart, evt);\n          if (triggerOnlyOnChange === false || angular.equals(lastState, activePoints) === false) {\n            lastState = activePoints;\n            scope[action](activePoints, evt);\n            scope.$apply();\n          }\n        }\n      };\n    }\n\n    function getColors (type, scope) {\n      var colors = angular.copy(scope.chartColors ||\n        ChartJs.getOptions(type).chartColors ||\n        Chart.defaults.global.colors\n      );\n      while (colors.length < scope.chartData.length) {\n        colors.push(scope.getColor());\n      }\n      return colors.map(convertColor);\n    }\n\n    function convertColor (color) {\n      if (typeof color === 'object' && color !== null) return color;\n      if (typeof color === 'string' && color[0] === '#') return getColor(hexToRgb(color.substr(1)));\n      return getRandomColor();\n    }\n\n    function getRandomColor () {\n      var color = [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n      return getColor(color);\n    }\n\n    function getColor (color) {\n      return {\n        backgroundColor: rgba(color, 0.2),\n        borderColor: rgba(color, 1),\n        pointBackgroundColor: rgba(color, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(color, 0.8)\n      };\n    }\n\n    function getRandomInt (min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    function rgba (color, alpha) {\n      if (usingExcanvas) {\n        // rgba not supported by IE8\n        return 'rgb(' + color.join(',') + ')';\n      } else {\n        return 'rgba(' + color.concat(alpha).join(',') + ')';\n      }\n    }\n\n    // Credit: http://stackoverflow.com/a/11508164/1190235\n    function hexToRgb (hex) {\n      var bigint = parseInt(hex, 16),\n        r = (bigint >> 16) & 255,\n        g = (bigint >> 8) & 255,\n        b = bigint & 255;\n\n      return [r, g, b];\n    }\n\n    function getDataSets (labels, data, series, colors) {\n      return {\n        labels: labels,\n        datasets: data.map(function (item, i) {\n          return angular.extend({}, colors[i], {\n            label: series[i],\n            data: item\n          });\n        })\n      };\n    }\n\n    function getData (labels, data, colors) {\n      return {\n        labels: labels,\n        datasets: [{\n          data: data,\n          backgroundColor: colors.map(function (color) {\n            return color.pointBackgroundColor;\n          }),\n          hoverBackgroundColor: colors.map(function (color) {\n            return color.backgroundColor;\n          })\n        }]\n      };\n    }\n\n    function updateChart (chart, values, scope) {\n      if (Array.isArray(scope.chartData[0])) {\n        chart.data.datasets.forEach(function (dataset, i) {\n          dataset.data = values[i];\n        });\n      } else {\n        chart.data.datasets[0].data = values;\n      }\n\n      chart.update();\n      scope.$emit('chart-update', chart);\n    }\n\n    function isEmpty (value) {\n      return ! value ||\n        (Array.isArray(value) && ! value.length) ||\n        (typeof value === 'object' && ! Object.keys(value).length);\n    }\n\n    function isResponsive (type, scope) {\n      var options = angular.extend({}, Chart.defaults.global, ChartJs.getOptions(type), scope.chartOptions);\n      return options.responsive;\n    }\n  }\n}));\n"],"sourceRoot":"/source/"}